{"version":3,"file":"dom_craft.umd.js","sources":["../domCraft.js"],"sourcesContent":["export class Dom {\n    constructor() {}\n    qs(selector) {\n        return document.querySelector(selector);\n    }\n    qsa(selector) {\n        return document.querySelectorAll(selector);\n    }\n    static el(tagName) {\n        return new Element(document.createElement(tagName));\n    }\n    static get body() {\n        return new Element(document.querySelector('body'));\n    }\n    static get span() {\n        return new Element('span');\n    }\n    static get p() {\n        return new Element('p');\n    }\n    static get h1() {\n        return new Element('h1');\n    }\n    static get h2() {\n        return new Element('h2');\n    }\n    static get h3() {\n        return new Element('h3');\n    }\n    static get h4() {\n        return new Element('h4');\n    }\n    static get h5() {\n        return new Element('h5');\n    }\n    static get h6() {\n        return new Element('h6');\n    }\n    static get div() {\n        return new Element('div');\n    }\n    static get section() {\n        return new Element('section');\n    }\n    static get article() {\n        return new Element('article');\n    }\n    static get header() {\n        return new Element('header');\n    }\n    static get footer() {\n        return new Element('footer');\n    }\n    static get main() {\n        return new Element('main');\n    }\n    static get ul() {\n        return new Element('ul');\n    }\n    static get li() {\n        return new Element('li');\n    }\n    static get a() {\n        return new Element('a');\n    }\n}\n\nexport class Element {\n    constructor(el) {\n        if (typeof el === 'string') {\n            this.el = document.createElement(el);\n        } else {\n            this.el = el;\n        }\n        this.init();\n        return this.el;\n    }\n    init() {\n        this.el.set = this.set.bind(this);\n    }\n    set(config = {}) {\n        this.config = config;\n        if ('text' in config) {\n            this.el.textContent = config.text;\n        }\n\n        if ('html' in config) {\n            this.el.innerHTML = config.html;\n        }\n\n        if ('style' in config) {\n            Object.keys(config.style).forEach((styleKey) => {\n                this.el.style[styleKey] = config.style[styleKey];\n            });\n        }\n\n        if ('attributes' in config) {\n            Object.keys(config.attributes).forEach((attrKey) => {\n                this.el.setAttribute(attrKey, config.attributes[attrKey]);\n            });\n        }\n\n        if ('children' in config) {\n            config.children.forEach((el) => {\n                this.el.append(el);\n            });\n        }\n\n        if ('on' in config) {\n            Object.keys(config.on).forEach((eventKey) => {\n                this.el.addEventListener(eventKey, config.on[eventKey].bind(this));\n            });\n        }\n\n        if ('classes' in config) {\n            if (config.classes.split(',').length === 1) {\n                this.el.classList.add(config.classes);\n            } else {\n                config.classes.split(',').forEach((className) => {\n                    this.el.classList.add(className.trim());\n                });\n            }\n        }\n\n        if ('animations' in config) {\n            Object.keys(config.animations).forEach((animationKey) => {\n                const [keyframe, options] = config.animations[animationKey];\n                this.el.animate(keyframe, options);\n            });\n        }\n\n        return this.el;\n    }\n}\n"],"names":["Element","constructor","el","this","document","createElement","init","set","bind","config","textContent","text","innerHTML","html","Object","keys","style","forEach","styleKey","attributes","attrKey","setAttribute","children","append","on","eventKey","addEventListener","classes","split","length","classList","add","className","trim","animations","animationKey","keyframe","options","animate","qs","selector","querySelector","qsa","querySelectorAll","tagName","body","span","p","h1","h2","h3","h4","h5","h6","div","section","article","header","footer","main","ul","li","a"],"mappings":"gPAmEO,MAAMA,EACT,WAAAC,CAAYC,GAOR,OALIC,KAAKD,GADS,iBAAPA,EACGE,SAASC,cAAcH,GAEvBA,EAEdC,KAAKG,OACEH,KAAKD,EACf,CACD,IAAAI,GACIH,KAAKD,GAAGK,IAAMJ,KAAKI,IAAIC,KAAKL,KAC/B,CACD,GAAAI,CAAIE,EAAS,IAmDT,OAlDAN,KAAKM,OAASA,EACV,SAAUA,IACVN,KAAKD,GAAGQ,YAAcD,EAAOE,MAG7B,SAAUF,IACVN,KAAKD,GAAGU,UAAYH,EAAOI,MAG3B,UAAWJ,GACXK,OAAOC,KAAKN,EAAOO,OAAOC,SAASC,IAC/Bf,KAAKD,GAAGc,MAAME,GAAYT,EAAOO,MAAME,EAAS,IAIpD,eAAgBT,GAChBK,OAAOC,KAAKN,EAAOU,YAAYF,SAASG,IACpCjB,KAAKD,GAAGmB,aAAaD,EAASX,EAAOU,WAAWC,GAAS,IAI7D,aAAcX,GACdA,EAAOa,SAASL,SAASf,IACrBC,KAAKD,GAAGqB,OAAOrB,EAAG,IAItB,OAAQO,GACRK,OAAOC,KAAKN,EAAOe,IAAIP,SAASQ,IAC5BtB,KAAKD,GAAGwB,iBAAiBD,EAAUhB,EAAOe,GAAGC,GAAUjB,KAAKL,MAAM,IAItE,YAAaM,IAC4B,IAArCA,EAAOkB,QAAQC,MAAM,KAAKC,OAC1B1B,KAAKD,GAAG4B,UAAUC,IAAItB,EAAOkB,SAE7BlB,EAAOkB,QAAQC,MAAM,KAAKX,SAASe,IAC/B7B,KAAKD,GAAG4B,UAAUC,IAAIC,EAAUC,OAAO,KAK/C,eAAgBxB,GAChBK,OAAOC,KAAKN,EAAOyB,YAAYjB,SAASkB,IACpC,MAAOC,EAAUC,GAAW5B,EAAOyB,WAAWC,GAC9ChC,KAAKD,GAAGoC,QAAQF,EAAUC,EAAQ,IAInClC,KAAKD,EACf,QApIE,MACH,WAAAD,GAAgB,CAChB,EAAAsC,CAAGC,GACC,OAAOpC,SAASqC,cAAcD,EACjC,CACD,GAAAE,CAAIF,GACA,OAAOpC,SAASuC,iBAAiBH,EACpC,CACD,SAAOtC,CAAG0C,GACN,OAAO,IAAI5C,EAAQI,SAASC,cAAcuC,GAC7C,CACD,eAAWC,GACP,OAAO,IAAI7C,EAAQI,SAASqC,cAAc,QAC7C,CACD,eAAWK,GACP,OAAO,IAAI9C,EAAQ,OACtB,CACD,YAAW+C,GACP,OAAO,IAAI/C,EAAQ,IACtB,CACD,aAAWgD,GACP,OAAO,IAAIhD,EAAQ,KACtB,CACD,aAAWiD,GACP,OAAO,IAAIjD,EAAQ,KACtB,CACD,aAAWkD,GACP,OAAO,IAAIlD,EAAQ,KACtB,CACD,aAAWmD,GACP,OAAO,IAAInD,EAAQ,KACtB,CACD,aAAWoD,GACP,OAAO,IAAIpD,EAAQ,KACtB,CACD,aAAWqD,GACP,OAAO,IAAIrD,EAAQ,KACtB,CACD,cAAWsD,GACP,OAAO,IAAItD,EAAQ,MACtB,CACD,kBAAWuD,GACP,OAAO,IAAIvD,EAAQ,UACtB,CACD,kBAAWwD,GACP,OAAO,IAAIxD,EAAQ,UACtB,CACD,iBAAWyD,GACP,OAAO,IAAIzD,EAAQ,SACtB,CACD,iBAAW0D,GACP,OAAO,IAAI1D,EAAQ,SACtB,CACD,eAAW2D,GACP,OAAO,IAAI3D,EAAQ,OACtB,CACD,aAAW4D,GACP,OAAO,IAAI5D,EAAQ,KACtB,CACD,aAAW6D,GACP,OAAO,IAAI7D,EAAQ,KACtB,CACD,YAAW8D,GACP,OAAO,IAAI9D,EAAQ,IACtB"}