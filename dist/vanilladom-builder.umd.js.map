{"version":3,"file":"vanilladom-builder.umd.js","sources":["../dom-builder.js"],"sourcesContent":["export class DomBuilder {\n    static qs(selector) {\n        return document.querySelector(selector);\n    }\n\n    static qsa(selector) {\n        return document.querySelectorAll(selector);\n    }\n\n    static ce(tagName) {\n        return new ElementBuilder(tagName);\n    }\n\n    static get body() {\n        return new ElementBuilder(document.body);\n    }\n}\n\nexport class ElementBuilder {\n    constructor(el) {\n        if (typeof el === 'string') {\n            this.el = document.createElement(el);\n        } else {\n            this.el = el;\n        }\n    }\n\n    text(content) {\n        this.el.textContent = content;\n        return this;\n    }\n\n    html(content) {\n        this.el.innerHTML = content;\n        return this;\n    }\n\n    style(styleObj = {}) {\n        Object.entries(styleObj).forEach(([key, value]) => {\n            this.el.style[key] = value;\n        });\n        return this;\n    }\n\n    attrs(attrObj = {}) {\n        Object.entries(attrObj).forEach(([key, value]) => {\n            this.el.setAttribute(key, value);\n        });\n        return this;\n    }\n\n    classes(classInput) {\n        if (Array.isArray(classInput)) {\n            this.el.classList.add(...classInput);\n        } else if (typeof classInput === 'string') {\n            classInput\n                .split(',')\n                .map((cls) => cls.trim())\n                .forEach((cls) => this.el.classList.add(cls));\n        }\n        return this;\n    }\n\n    on(eventName, handler) {\n        this.el.addEventListener(eventName, handler.bind(this));\n        return this;\n    }\n\n    nested(elements = []) {\n        elements.forEach((child) => {\n            this.el.append(child.el || child);\n        });\n        return this;\n    }\n\n    ref(callback) {\n        if (typeof callback === 'function') {\n            callback(this.el);\n        }\n        return this;\n    }\n\n    transition(value) {\n        this.el.style.transition = value;\n        return this;\n    }\n\n    build() {\n        return this.el;\n    }\n}\n"],"names":["ElementBuilder","constructor","el","this","document","createElement","text","content","textContent","html","innerHTML","style","styleObj","Object","entries","forEach","key","value","attrs","attrObj","setAttribute","classes","classInput","Array","isArray","classList","add","split","map","cls","trim","on","eventName","handler","addEventListener","bind","nested","elements","child","append","ref","callback","transition","build","qs","selector","querySelector","qsa","querySelectorAll","ce","tagName","body"],"mappings":"kPAkBO,MAAMA,EACT,WAAAC,CAAYC,GAEJC,KAAKD,GADS,iBAAPA,EACGE,SAASC,cAAcH,GAEvBA,CAEjB,CAED,IAAAI,CAAKC,GAED,OADAJ,KAAKD,GAAGM,YAAcD,EACfJ,IACV,CAED,IAAAM,CAAKF,GAED,OADAJ,KAAKD,GAAGQ,UAAYH,EACbJ,IACV,CAED,KAAAQ,CAAMC,EAAW,IAIb,OAHAC,OAAOC,QAAQF,GAAUG,SAAQ,EAAEC,EAAKC,MACpCd,KAAKD,GAAGS,MAAMK,GAAOC,CAAK,IAEvBd,IACV,CAED,KAAAe,CAAMC,EAAU,IAIZ,OAHAN,OAAOC,QAAQK,GAASJ,SAAQ,EAAEC,EAAKC,MACnCd,KAAKD,GAAGkB,aAAaJ,EAAKC,EAAM,IAE7Bd,IACV,CAED,OAAAkB,CAAQC,GASJ,OARIC,MAAMC,QAAQF,GACdnB,KAAKD,GAAGuB,UAAUC,OAAOJ,GACI,iBAAfA,GACdA,EACKK,MAAM,KACNC,KAAKC,GAAQA,EAAIC,SACjBf,SAASc,GAAQ1B,KAAKD,GAAGuB,UAAUC,IAAIG,KAEzC1B,IACV,CAED,EAAA4B,CAAGC,EAAWC,GAEV,OADA9B,KAAKD,GAAGgC,iBAAiBF,EAAWC,EAAQE,KAAKhC,OAC1CA,IACV,CAED,MAAAiC,CAAOC,EAAW,IAId,OAHAA,EAAStB,SAASuB,IACdnC,KAAKD,GAAGqC,OAAOD,EAAMpC,IAAMoC,EAAM,IAE9BnC,IACV,CAED,GAAAqC,CAAIC,GAIA,MAHwB,mBAAbA,GACPA,EAAStC,KAAKD,IAEXC,IACV,CAED,UAAAuC,CAAWzB,GAEP,OADAd,KAAKD,GAAGS,MAAM+B,WAAazB,EACpBd,IACV,CAED,KAAAwC,GACI,OAAOxC,KAAKD,EACf,eAzFE,MACH,SAAO0C,CAAGC,GACN,OAAOzC,SAAS0C,cAAcD,EACjC,CAED,UAAOE,CAAIF,GACP,OAAOzC,SAAS4C,iBAAiBH,EACpC,CAED,SAAOI,CAAGC,GACN,OAAO,IAAIlD,EAAekD,EAC7B,CAED,eAAWC,GACP,OAAO,IAAInD,EAAeI,SAAS+C,KACtC"}